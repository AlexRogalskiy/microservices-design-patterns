apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name:  demo-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: demo
  resources:
    requests:
      storage: 100M
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: demo
provisioner: microk8s.io/hostpath
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    appdb: mongodb
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      appdb: mongodb
  template:
    metadata:
      labels:
        appdb: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:3.6.6
#          command:
#            - mongod
#            - "--replSet"
#            - rs0
#            - "--noprealloc"
#          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "100m"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
#        - name: mongo-sidecar
#          image: cvallance/mongo-k8s-sidecar
#          env:
#            - name: MONGO_SIDECAR_POD_LABELS
#              value: "appdb=mongodb"
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    appdb: mongodb
