configuration:
    jwt:
        # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
        base64-secret: YTMwOTIwODE1MGMzOGExM2E4NDc5ZjhjMmQwMTdkNDJlZWZkOTE0YTMwNWUxMTgxMTFhZTI1ZDI3M2QyMTRmMjI5Yzg0ODBjYTUxYjVkY2I5ZmY0YmRkMzBlZjRjNDM2Y2NiYzhlZjQ0ODRjMWZlNzVmZjdjM2JiMjdkMjdmMjk=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000

management:
    endpoints:
        web:
            exposure:
                include: '*'
    server:
        port: ${server.port}
    endpoint:
        health:
            show-details: when_authorized

logging:
    file: ${LOGGING_PATH:/tmp/}${spring.application.name}.log

spring:
    main:
        allow-bean-definition-overriding: true
    cloud:
        config:
            allowOverride: true
            overrideNone: true
            overrideSystemProperties: false
security:
    oauth2:
        client:
            accessTokenUri: ${ACCESS_TOKEN_URI:http://localhost:9999/oauth/token}
            userAuthorizationUri: ${AUTHORIZATION_URL:http://localhost:9999/oauth/authorize}
            clientId: ${OAUTH_CLIENT_ID:client}
            clientSecret: ${OAUTH_CLIENT_SECRET:secret}
        resource:
            jwt:
                keyValue: ${configuration.jwt.base64-secret:}
            user-info-uri: ${USER_INFO_URI:http://localhost:9999/api/authenticatedUser}

---
spring:
    profiles: dev, default
    sleuth:
        sampler:
            probability: 1

---
spring:
    profiles: prod
    sleuth:
        sampler:
            probability: 0.1

configuration:
    jwt:
        base64-secret:
        keystore: ${KEYSTORE:}
        keystoreAlias: ${KEYSTORE_ALIAS:}
        keystorePassword: ${KEYSTORE_PASSWORD:}

security:
    oauth2:
        client:
            accessTokenUri: ${ACCESS_TOKEN_URI:https://www.spendingbetter.com/oauth/token}
            userAuthorizationUri: ${AUTHORIZATION_URL:https://www.spendingbetter.com/oauth/authorize}
            clientId: ${OAUTH_CLIENT_ID:client}
            clientSecret: ${OAUTH_CLIENT_SECRET:secret}
        resource:
            jwt:
                key-store: ${configuration.jwt.keystore:}
                key-store-password: ${configuration.jwt.keystorePassword:}
                key-alias: ${configuration.jwt.keystoreAlias:}
            user-info-uri: ${USER_INFO_URI:https://www.spendingbetter.com/api/authenticatedUser}

#eureka:
#    instance:
#        preferIpAddress: ${PREFER_IP_ADDRESS:true}
#        nonSecurePortEnabled: ${NON_SECURE_PORT_ENABLED:false}
#        securePortEnabled: ${SECURE_PORT_ENABLED:true}
#        securePort: ${server.port}
#        secureHealthCheckUrl: https://${spring.cloud.client.hostname}:${management.server.port}${management.server.servlet.context-path:}/${endpoints.health.id:health}
#        healthCheckUrl: https://${spring.cloud.client.hostname}:${management.server.port}${management.server.servlet.context-path:}/${endpoints.health.id:health}
#        statusPageUrl: https://${spring.cloud.client.hostname}:${management.server.port}${management.server.servlet.context-path:}/${endpoints.health.id:info}
#        leaseExpirationDurationInSeconds: 45
#        metadata-map:
#            host.name: ${spring.cloud.client.hostname:}
#            management.server.port: ${management.server.port:}
#            metrics.path: ${management.server.servlet.context-path:}/${endpoints.prometheus.id:prometheus}
#            health.path: ${management.server.servlet.context-path:}/${endpoints.health.id:health}
#            management.server.servlet.context-path: ${management.server.servlet.context-path:}
