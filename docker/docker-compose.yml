version: '3.2'
services:
  service-discovery:
    image: eureka-server
    container_name: service-discovery
    environment:
      - SPRING_REDIS_HOST=redisdb
      - SPRING_PROFILES_ACTIVE=dev
      - SERVER_PORT=8761
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      #- DEBUG=true
    depends_on:
      - redisdb
      - mongodb-datasource
    ports:
      - 8761:8761
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
    command: sh ./docker-entrypoint.sh redisdb:6379
    networks:
      net:
        aliases:
          - service-discovery

  config-management:
    image: config-server
    container_name: config-management
    environment:
      - SPRING_REDIS_HOST=redisdb
      - SPRING_PROFILES_ACTIVE=native
      - SERVER_PORT=8888
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      #- DEBUG=true
      - LOGGING_LEVEL_COM_SPRINGBOOT=debug
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:./config
    depends_on:
      - service-discovery
    ports:
      - 8888:8888
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
      - ../config-server/configuration:/config
    command: sh ./docker-entrypoint.sh service-discovery:8761
    networks:
      net:
        aliases:
          - config-management

  gateway:
    image: edge-server
    container_name: gateway
    environment:
      - SPRING_REDIS_HOST=redisdb
      - X_ENCRYPT_KEY=b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-management:8888
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=false
      - SERVER_PORT=9006
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      #- DEBUG=true
      - LOGGING_LEVEL_COM_SPRINGBOOT=debug
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=debug
      - SPRING_ZIPKIN_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
    depends_on:
      - service-discovery
      - config-management
    ports:
      - 9006:9006
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
    command: sh ./docker-entrypoint.sh config-management:8888
    networks:
      net:
        aliases:
          - gateway

  monitoring:
    image: admin-server
    container_name: monitoring
    environment:
      - SPRING_REDIS_HOST=redisdb
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-management:8888
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=false
      - SERVER_PORT=9000
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      - X_ENCRYPT_KEY=b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
      - LOGGING_LEVEL_COM_SPRINGBOOT=debug
      - OAUTH_CLIENT_ID=actuator
      - OAUTH_CLIENT_SECRET=actuator_password
      - CONTEXTPATH=/monitoring
      - LOGGING_LEVEL_COM_MICROSERVICE=debug
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
    depends_on:
      - service-discovery
      - config-management
    ports:
      - 9000:9000
    networks:
      net:
        aliases:
          - monitoring

  react-webapp-jhipster:
      build:
          args:
              - PORT=3004
              - SERVER_PROTOCOL=https
              - SERVER_URL=spendingbetter.com
          context: ../react-webapp-jhipster
          dockerfile: Dockerfile
      container_name: react-webapp-jhipster
      ports:
          - 3004:3004
      links:
        - gateway
      environment:
        - NODE_ENV=production
        - SERVER_API_URL=https://spendingbetter.com/
      volumes:
          - ./docker-entrypoint.sh:/tmp/docker-entrypoint.sh
#            - ./node_modules:/usr/src/app/
      command: sh /tmp/docker-entrypoint.sh gateway:9006
      networks:
        net:
          aliases:
            - react-webapp-jhipster

  react-webapp:
    build:
      args:
        - PORT=3003
      context: ../react-webapp
      dockerfile: Dockerfile
    container_name: react-webapp
    environment:
      - NODE_ENV=development
    ports:
      - 3003:3003
    links:
      - gateway
    volumes:
      - ./docker-entrypoint.sh:/tmp/docker-entrypoint.sh
    #            - .:/usr/src/app
    #            - ./node_modules:/usr/src/app/node_modules
    command: sh /tmp/docker-entrypoint.sh gateway:9006
    networks:
      net:
        aliases:
          - react-webapp

  week-menu-api:
    build:
      context: ../nodejs-service
      dockerfile: Dockerfile
    container_name: week-menu-api
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER=http://localhost:8888
      - SERVER_PORT=3002
      - MONGODB_URI=mongodb://mongodb-datasource:27017/docker
      - EUREKA_SERVER=service-discovery
      - EUREKA_PORT=8761
      #            - DEBUG=*
      #            - NODE_DEBUG=request
      - HOST_NAME=week-menu-api
      - IP_ADDRESS=week-menu-api
      - ZIPKIN_HOST=zipkin
      - ZIPKIN_PORT=9411
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
    depends_on:
      - service-discovery
      - config-management
    links:
      - service-discovery
      - config-management
    ports:
      - 3002:3002
    volumes:
      - ./docker-entrypoint.sh:/tmp/docker-entrypoint.sh
    command: sh /tmp/docker-entrypoint.sh config-management:8888
    networks:
      net:
        aliases:
          - week-menu-api

  product-api:
    build:
      args:
        - PORT=3005
      context: ../python-service
      dockerfile: Dockerfile
    container_name: product-api
    environment:
      - NODE_ENV=dev
      - ENV_FILE_LOCATION=./.env.docker
    ports:
      - 3005:3005
    links:
      - gateway
      - service-discovery
      - mongodb-datasource
    networks:
      net:
        aliases:
          - product-api

  person-api:
    image: person-service
    container_name: person-api
    environment:
      - X_ENCRYPT_KEY=b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-management:8888
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=false
      - SERVER_PORT=8082
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      #- DEBUG=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
    depends_on:
      - service-discovery
      - config-management
      - mongodb-datasource
    ports:
      - 8082:8082
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
    command: sh ./docker-entrypoint.sh config-management:8888
    networks:
      net:
        aliases:
          - person-api

  task-api:
    image: kotlin-service
    container_name: task-api
    environment:
      - X_ENCRYPT_KEY=b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-management:8888
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=false
      - SERVER_PORT=9092
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      #- DEBUG=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=debug
    depends_on:
      - service-discovery
      - config-management
      - mongodb-datasource
    ports:
      - 9092:9092
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
    command: sh ./docker-entrypoint.sh config-management:8888
    networks:
      net:
        aliases:
          - task-api

  user-api:
    image: user-service
    container_name: user-api
    environment:
      - X_ENCRYPT_KEY=b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-management:8888
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=false
      - SERVER_PORT=8083
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      #- DEBUG=true
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=debug
      - LOGGING_LEVEL_COM_MICROSERVICE=debug
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
    links:
      - authentication-api
    ports:
      - 8083:8083
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
    command: sh ./docker-entrypoint.sh authentication-api:9999
    networks:
      net:
        aliases:
          - user-api

  authentication-api:
    image: authentication-service
    container_name: authentication-api
    environment:
      - X_ENCRYPT_KEY=b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_REDIS_HOST=redisdb
      - SPRING_CLOUD_CONFIG_URI=http://config-management:8888
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=false
      - SERVER_PORT=9999
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017
      - SPRING_DATA_MONGODB_DATABASE=docker
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      #- DEBUG=true
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=debug
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=debug
      - CONFIGURATION_AUTHORIZE_URLS=http://localhost:9006/login;http://localhost:8888/login;http://localhost:8761/login;http://localhost:9000/login;http://localhost:3003/login
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
    depends_on:
      - service-discovery
      - config-management
      - mongodb-datasource
    ports:
      - 9999:9999
    volumes:
      - ./docker-entrypoint.sh:/docker-entrypoint.sh
    command: sh ./docker-entrypoint.sh config-management:8888
    networks:
      net:
        aliases:
          - authentication-api

  mongodb-datasource:
    image: mongo:3.4.10
    command: mongod --port 27017
    container_name: mongodb-datasource
    ports:
      - 27017:27017
    networks:
      net:
        aliases:
          - mongodb-datasource

  redisdb:
    image: redis:alpine
    container_name: redisdb
    ports:
      - 6379:6379
    networks:
      net:
        aliases:
          - redisdb

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    environment:
      - EUREKA_SERVER=service-discovery
      - EUREKA_PORT=8761
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - service-discovery
    links:
      - service-discovery
    networks:
      net:
        aliases:
          - prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_SERVER_ROOT_URL=http://localhost:3000/grafana
#      - GF_SERVER_SERVE_FROM_SUB_PATH=true
#      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
#      - GF_AUTH_GENERIC_OAUTH_SCOPES=read
#      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=false
#      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=client
#      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=secret
#      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=http://localhost:9999/oauth/authorize
#      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=http://localhost:9999/oauth/token
#      - GF_AUTH_GENERIC_OAUTH_API_URL=http://localhost:9999/api/authenticatedUser
    networks:
      net:
        aliases:
          - grafana

  setup_grafana_datasource:
    image: appropriate/curl
    container_name: setup_grafana_datasource
    depends_on:
      - grafana
    volumes:
      - ./create-datasource-and-dashboard.sh:/create.sh:ro
    command: /create.sh
    networks:
      net:
        aliases:
          - setup_grafana_datasource

  zipkin-mysql:
    image: openzipkin/zipkin-mysql
    container_name: zipkin-mysql
    # Uncomment to expose the storage port for testing
    # ports:
    #   - 3306:3306
    networks:
      net:
        aliases:
          - zipkin-mysql

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    #image: openzipkin/zipkin
    container_name: zipkin
    build:
      context: ../openzipkin-eureka
    # Environment settings are defined here https://github.com/openzipkin/zipkin/tree/1.19.0/zipkin-server#environment-variables
    environment:
      - EUREKA_SERVER=http://service-discovery:8761/eureka/
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=zipkin-mysql
      - SERVER_PORT=9411
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      - JAVA_OPTS=-verbose:gc -Xms512M -Xmx1G
      #- DEBUG=true
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=debug
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG -Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    depends_on:
      - zipkin-mysql
    networks:
      net:
        aliases:
          - zipkin

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: zipkin-dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=zipkin-mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to see dependency processing logs
      # - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      - JAVA_OPTS=-verbose:gc -Xms512M -Xmx1G
    depends_on:
      - zipkin-mysql
    networks:
      net:
        aliases:
          - zipkin-dependencies

networks:
  net: