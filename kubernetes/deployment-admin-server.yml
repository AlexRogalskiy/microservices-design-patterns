apiVersion: v1
kind: Service
metadata:
  name: admin-server
  annotations:
    cloud.google.com/app-protocols: '{"https-port":"HTTPS","http-port":"HTTP"}'
  labels:
    app: admin-server
spec:
  ports:
    - name: https-port
      port: 8443
    - name: http-port
      port: 9000
  selector:
    app: admin-server
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: admin-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: admin-server
        version: v1
    spec:
      containers:
        - name: admin-server
          image: eu.gcr.io/spring-boot-gke-243520/admin-server:8.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "256Mi"
            limits:
              memory: "512Mi"
          volumeMounts:
            - name: spendingbetter-p12
              mountPath: "/etc/ssl_certs_p12"
              readOnly: true
            - name: spendingbetter-crt
              mountPath: "/etc/crt"
              readOnly: true
            - name: spendingbetter-jks
              mountPath: "/etc/ssl_certs_jks"
              readOnly: true
          env:
            - name: JAVA_OPTS
              value: -Xms256m -Xmx512m
            - name: SERVER_PORT
              value: "9000"
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
              value: "true"
            - name: SPRING_DATA_MONGODB_URI
              value: mongodb://mongodb:27017
            - name: SPRING_DATA_MONGODB_DATABASE
              value: docker
            - name: SPRING_REDIS_HOST
              value: redis
            - name: EUREKA_SERVER
              value: http://eureka-server:8761/eureka/eureka/
            - name: SPRING_CLOUD_CONFIG_URI
              value: http://config-server:8888
            - name: X_ENCRYPT_KEY
              value: b7fc7cec8e7aab24648723258da87a8d09ad7cef7b0a2842738884496a9fbb53
            - name: OAUTH_CLIENT_ID
              value: actuator
            - name: OAUTH_CLIENT_SECRET
              value: actuator_password
#            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
#              value: debug
#            - name: SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED
#              value: "false"
            - name: SPRING_BOOT_ADMIN_CONTEXT_PATH
              value: /monitoring
            - name: SERVER_USE_FORWARD_HEADERS
              value: "true"
            - name: KEYSTORE
              value: file:/etc/ssl_certs_jks/www.spendingbetter.com.jks
            - name: KEYSTORE_ALIAS
              value: spring-boot
            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: KEYSTORE_PASSWORD
            - name: ACCESS_TOKEN_URI
              value: https://spendingbetter.com/auth/oauth/token
            - name: AUTHORIZATION_URL
              value: https://spendingbetter.com/auth/oauth/authorize
            - name: USER_INFO_URI
              value: https://spendingbetter.com/auth/api/authenticatedUser
#            - name: SERVER_SSL_KEY_STORE
#              value: "/etc/ssl_certs_p12/www.spendingbetter.com.p12"
#            - name: SERVER_SSL_KEY_STORE_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: secrets
#                  key: KEYSTORE_PASSWORD
#            - name: SERVER_SSL_KEY_STORE_TYPE
#              value: PKCS12
#            - name: SPRING_CLOUD_CLIENT_HOSTNAME
#              value: config-management.spendingbetter.com
#            - name: SERVICE_SECURITY_TRUSTSTOREPATH
#              value: /etc/ssl/truststore.jks
#            - name: SERVICE_SECURITY_TRUSTSTOREPASSWORD
#              value: ${SERVER_SSL_KEY_STORE_PASSWORD}
          command: ["/bin/sh"]
          args: ["-c", "keytool -import -trustcacerts -alias spendingbetter.com -file /etc/crt/www.spendingbetter.com.crt -storepass changeit -keystore $JAVA_HOME/lib/security/cacerts -noprompt && $JAVA_CMD"]
#          && keytool -import -file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -keystore /etc/ssl/truststore.jks -storepass $(SERVER_SSL_KEY_STORE_PASSWORD) -alias kubernetes_ca -noprompt
          ports:
            - containerPort: 9000
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /monitoring/actuator/health
              port: 9000
            initialDelaySeconds: 200
            periodSeconds: 5
      volumes:
        - name: spendingbetter-p12
          secret:
            secretName: spendingbetter-p12
        - name: spendingbetter-crt
          secret:
            secretName: spendingbetter-crt
        - name: spendingbetter-jks
          secret:
            secretName: spendingbetter-jks
